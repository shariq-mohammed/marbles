% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gradient_descent.R
\name{gradient_descent}
\alias{gradient_descent}
\title{Gradient Descent Algorithm For Structure Parameter}
\usage{
gradient_descent(
  lambda_init,
  mu,
  L,
  L_inv,
  w,
  alpha = 0.01,
  epsilon = 1e-10,
  maxIter = 1000
)
}
\arguments{
\item{lambda_init}{initial value of \eqn{\lambda}; vector of size \eqn{g}}

\item{mu}{prior mean of \eqn{\lambda}; vector of size \eqn{g}}

\item{L}{prior covariance of \eqn{\lambda}; matrix of dimension
\eqn{g}x\eqn{g}}

\item{L_inv}{inverse prior covariance of \eqn{\lambda}; matrix of dimension
\eqn{g}x\eqn{g}}

\item{w}{probability of selecting associations for the covariates; vector of
size \eqn{g}}

\item{alpha}{step-size for gradient descent; defaults to 0.01 but dynamically
changes through the iterations}

\item{epsilon}{error threshold; defaults to 1e-10}

\item{maxIter}{maximum number of iterations; defaults to 1000}
}
\value{
\itemize{
 \item{\code{lambda}} {Solution of the gradient descent for the structure
                       parameter \eqn{\lambda}}
 \item{\code{objFn}} {Values of the objective function (from the gradient
                      descent for the structure parameter \eqn{\lambda})
                      attained through iterations}
}
}
\description{
Performs the M-step optimization using gradient descent approach in the
EM algorithm for the structure parameter \eqn{\lambda}. Note: The
maximization problem was transformed to solve a minimization problem,
however, the objective function is returned for the maximization.
}
\examples{
g = 10

lambda_init = rnorm(g)
mu = rep(c(0,1), c(g/2,g/2))
L = diag(g)
L_inv = solve(L)
w = sort(runif(g))

res = gradient_descent(lambda_init, mu, L, L_inv, w)
}
